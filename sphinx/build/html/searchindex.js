Search.setIndex({"docnames": ["api/ggfm.conv", "api/ggfm.data", "api/ggfm.dataset", "api/ggfm.evaluate", "api/ggfm.models", "generated/ggfm.conv.GraphConv", "generated/ggfm.conv.GraphConvLayer", "generated/ggfm.conv.HGTConv", "generated/ggfm.conv.TransConv", "generated/ggfm.conv.TransConvLayer", "generated/ggfm.data.Graph", "generated/ggfm.data.HomogeneousGraph", "generated/ggfm.data.args_print", "generated/ggfm.data.construct_graph", "generated/ggfm.data.construct_graph_node_name", "generated/ggfm.data.construct_link_and_node", "generated/ggfm.data.download_google_url", "generated/ggfm.data.download_url", "generated/ggfm.data.extract_zip", "generated/ggfm.data.feature_extractor", "generated/ggfm.data.generate_lm_embs", "generated/ggfm.data.generate_masks", "generated/ggfm.data.get_train_val_test_split", "generated/ggfm.data.get_type_id", "generated/ggfm.data.higpt_prompt_generation", "generated/ggfm.data.mean_reciprocal_rank", "generated/ggfm.data.metapath_based_corpus_construction", "generated/ggfm.data.ndcg_at_k", "generated/ggfm.data.open_pkl_file", "generated/ggfm.data.open_txt_file", "generated/ggfm.data.random_walk_based_corpus_construction", "generated/ggfm.data.read_npz", "generated/ggfm.data.renamed_load", "generated/ggfm.data.sample_subgraph", "generated/ggfm.data.save_pkl_file", "generated/ggfm.data.save_txt_file", "generated/ggfm.datasets.AMiner", "generated/ggfm.datasets.Amazon", "generated/ggfm.datasets.Aminer", "generated/ggfm.datasets.CiteSeer", "generated/ggfm.datasets.DBLP", "generated/ggfm.datasets.IMDB", "generated/ggfm.datasets.LastFM", "generated/ggfm.datasets.MAG", "generated/ggfm.datasets.OAG_CS", "generated/ggfm.datasets.PubMed", "generated/ggfm.datasets.YELP", "generated/ggfm.datasets.cora", "generated/ggfm.models.CLIP", "generated/ggfm.models.Classifier", "generated/ggfm.models.GPT_GNN", "generated/ggfm.models.GraphGPT_pl", "generated/ggfm.models.GraphLlamaForCausalLM", "generated/ggfm.models.GraphLlamaModel", "generated/ggfm.models.HGT", "generated/ggfm.models.HeteroLlamaForCausalLM", "generated/ggfm.models.LLAGA", "generated/ggfm.models.LinkPredictor", "generated/ggfm.models.MPNN", "generated/ggfm.models.Matcher", "generated/ggfm.models.PT_HGNN", "generated/ggfm.models.RNNModel", "generated/ggfm.models.SGFormer", "index", "notes/developer_guide", "notes/install", "notes/quick_start"], "filenames": ["api/ggfm.conv.rst", "api/ggfm.data.rst", "api/ggfm.dataset.rst", "api/ggfm.evaluate.rst", "api/ggfm.models.rst", "generated/ggfm.conv.GraphConv.rst", "generated/ggfm.conv.GraphConvLayer.rst", "generated/ggfm.conv.HGTConv.rst", "generated/ggfm.conv.TransConv.rst", "generated/ggfm.conv.TransConvLayer.rst", "generated/ggfm.data.Graph.rst", "generated/ggfm.data.HomogeneousGraph.rst", "generated/ggfm.data.args_print.rst", "generated/ggfm.data.construct_graph.rst", "generated/ggfm.data.construct_graph_node_name.rst", "generated/ggfm.data.construct_link_and_node.rst", "generated/ggfm.data.download_google_url.rst", "generated/ggfm.data.download_url.rst", "generated/ggfm.data.extract_zip.rst", "generated/ggfm.data.feature_extractor.rst", "generated/ggfm.data.generate_lm_embs.rst", "generated/ggfm.data.generate_masks.rst", "generated/ggfm.data.get_train_val_test_split.rst", "generated/ggfm.data.get_type_id.rst", "generated/ggfm.data.higpt_prompt_generation.rst", "generated/ggfm.data.mean_reciprocal_rank.rst", "generated/ggfm.data.metapath_based_corpus_construction.rst", "generated/ggfm.data.ndcg_at_k.rst", "generated/ggfm.data.open_pkl_file.rst", "generated/ggfm.data.open_txt_file.rst", "generated/ggfm.data.random_walk_based_corpus_construction.rst", "generated/ggfm.data.read_npz.rst", "generated/ggfm.data.renamed_load.rst", "generated/ggfm.data.sample_subgraph.rst", "generated/ggfm.data.save_pkl_file.rst", "generated/ggfm.data.save_txt_file.rst", "generated/ggfm.datasets.AMiner.rst", "generated/ggfm.datasets.Amazon.rst", "generated/ggfm.datasets.Aminer.rst", "generated/ggfm.datasets.CiteSeer.rst", "generated/ggfm.datasets.DBLP.rst", "generated/ggfm.datasets.IMDB.rst", "generated/ggfm.datasets.LastFM.rst", "generated/ggfm.datasets.MAG.rst", "generated/ggfm.datasets.OAG_CS.rst", "generated/ggfm.datasets.PubMed.rst", "generated/ggfm.datasets.YELP.rst", "generated/ggfm.datasets.cora.rst", "generated/ggfm.models.CLIP.rst", "generated/ggfm.models.Classifier.rst", "generated/ggfm.models.GPT_GNN.rst", "generated/ggfm.models.GraphGPT_pl.rst", "generated/ggfm.models.GraphLlamaForCausalLM.rst", "generated/ggfm.models.GraphLlamaModel.rst", "generated/ggfm.models.HGT.rst", "generated/ggfm.models.HeteroLlamaForCausalLM.rst", "generated/ggfm.models.LLAGA.rst", "generated/ggfm.models.LinkPredictor.rst", "generated/ggfm.models.MPNN.rst", "generated/ggfm.models.Matcher.rst", "generated/ggfm.models.PT_HGNN.rst", "generated/ggfm.models.RNNModel.rst", "generated/ggfm.models.SGFormer.rst", "index.rst", "notes/developer_guide.rst", "notes/install.rst", "notes/quick_start.rst"], "titles": ["ggfm.conv", "ggfm.data", "ggfm.datasets", "ggfm.evaluation", "ggfm.models", "ggfm.conv.GraphConv", "ggfm.conv.GraphConvLayer", "ggfm.conv.HGTConv", "ggfm.conv.TransConv", "ggfm.conv.TransConvLayer", "ggfm.data.Graph", "ggfm.data.HomogeneousGraph", "ggfm.data.args_print", "ggfm.data.construct_graph", "ggfm.data.construct_graph_node_name", "ggfm.data.construct_link_and_node", "ggfm.data.download_google_url", "ggfm.data.download_url", "ggfm.data.extract_zip", "ggfm.data.feature_extractor", "ggfm.data.generate_lm_embs", "ggfm.data.generate_masks", "ggfm.data.get_train_val_test_split", "ggfm.data.get_type_id", "ggfm.data.higpt_prompt_generation", "ggfm.data.mean_reciprocal_rank", "ggfm.data.metapath_based_corpus_construction", "ggfm.data.ndcg_at_k", "ggfm.data.open_pkl_file", "ggfm.data.open_txt_file", "ggfm.data.random_walk_based_corpus_construction", "ggfm.data.read_npz", "ggfm.data.renamed_load", "ggfm.data.sample_subgraph", "ggfm.data.save_pkl_file", "ggfm.data.save_txt_file", "ggfm.datasets.AMiner", "ggfm.datasets.Amazon", "ggfm.datasets.Aminer", "ggfm.datasets.CiteSeer", "ggfm.datasets.DBLP", "ggfm.datasets.IMDB", "ggfm.datasets.LastFM", "ggfm.datasets.MAG", "ggfm.datasets.OAG_CS", "ggfm.datasets.PubMed", "ggfm.datasets.YELP", "ggfm.datasets.cora", "ggfm.models.CLIP", "ggfm.models.Classifier", "ggfm.models.GPT_GNN", "ggfm.models.GraphGPT_pl", "ggfm.models.GraphLlamaForCausalLM", "ggfm.models.GraphLlamaModel", "ggfm.models.HGT", "ggfm.models.HeteroLlamaForCausalLM", "ggfm.models.LLAGA", "ggfm.models.LinkPredictor", "ggfm.models.MPNN", "ggfm.models.Matcher", "ggfm.models.PT_HGNN", "ggfm.models.RNNModel", "ggfm.models.SGFormer", "Welcome to GGFM\u2019s documentation!", "Developer Guide", "Install", "Quick Start"], "terms": {"class": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64], "in_channel": [5, 6, 8, 9, 58, 62], "hidden_channel": [5, 8, 58, 62], "num_lay": [5, 8], "2": [5, 7, 8, 24, 26, 33, 47, 52, 53, 54, 55, 61, 64, 65], "dropout": [5, 7, 8, 54, 61], "0": [5, 7, 8, 11, 30, 37, 50, 52, 53, 54, 55, 59, 60, 61, 62, 64, 65], "5": [5, 8, 11, 47, 62, 64], "use_bn": [5, 8], "true": [5, 6, 7, 8, 9, 16, 17, 18, 48, 50, 52, 53, 55, 58, 59, 60, 62, 64], "use_residu": [5, 8], "use_weight": [5, 6, 8, 9], "use_init": [5, 6], "fals": [5, 6, 9, 17, 18, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 55, 60, 62], "use_act": [5, 8], "sourc": [5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "forward": [5, 6, 7, 8, 9, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "x": [5, 6, 8, 49, 51, 59, 62], "edge_index": [5, 6, 7, 50, 54, 60, 62], "defin": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "comput": [5, 6, 8, 9, 25, 27, 37, 39, 40, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "perform": [5, 6, 8, 9, 24, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "everi": [5, 6, 7, 8, 9, 48, 49, 50, 54, 56, 57, 59, 60, 61, 62], "call": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "should": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "overridden": [5, 6, 8, 9, 48, 49, 50, 54, 56, 57, 59, 60, 61, 62], "all": [5, 6, 8, 9, 10, 24, 30, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "subclass": [5, 6, 8, 9, 48, 49, 50, 54, 56, 57, 59, 60, 61, 62], "although": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "recip": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "pass": [5, 6, 7, 8, 9, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "need": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "within": [5, 6, 8, 9, 42, 44, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "thi": [5, 6, 7, 8, 9, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "function": [5, 6, 7, 8, 9, 24, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "one": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "modul": [5, 6, 7, 8, 9, 38, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "instanc": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "afterward": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "instead": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "sinc": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "former": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "take": [5, 6, 7, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66], "care": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "run": [5, 6, 7, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65], "regist": [5, 6, 8, 9, 48, 49, 50, 54, 56, 57, 59, 60, 61, 62], "hook": [5, 6, 8, 9, 48, 49, 50, 54, 56, 57, 59, 60, 61, 62], "while": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "latter": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "silent": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "ignor": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62], "them": [5, 6, 8, 9, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64], "reset_paramet": [5, 6, 8, 9, 58, 62], "train": [5, 6, 8, 9, 11, 19, 22, 24, 33, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66], "bool": [5, 6, 7, 8, 9, 16, 17, 18, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "out_channel": [6, 9, 58, 62], "x0": 6, "in_dim": [7, 54], "out_dim": 7, "num_typ": [7, 54], "num_rel": [7, 54], "n_head": [7, 54], "1": [7, 8, 11, 24, 36, 37, 47, 50, 51, 52, 53, 55, 59, 62, 64, 65], "use_norm": [7, 59], "kwarg": [7, 51, 52, 55, 56, 58], "The": [7, 10, 11, 13, 17, 18, 22, 23, 24, 27, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 64], "heterogen": [7, 10, 36, 40, 41, 54, 55, 60, 64], "graph": [7, 11, 13, 14, 15, 19, 22, 23, 24, 26, 32, 33, 36, 37, 39, 40, 41, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64], "transform": [7, 9, 10, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 64], "hgt": [7, 10], "oper": [7, 10, 52, 54, 55, 65], "from": [7, 10, 13, 36, 37, 38, 42, 43, 46, 52, 54, 55, 62, 64, 65, 66], "paper": [7, 10, 19, 24, 33, 36, 37, 40, 41, 43, 50, 52, 53, 54, 55, 56, 64], "paramet": [7, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 33, 34, 35, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 66], "int": [7, 20, 26, 27, 30, 33, 49, 50, 52, 55, 56, 57, 58, 59, 61, 62, 64], "size": [7, 49, 50, 52, 55, 57, 59, 61], "each": [7, 19, 23, 25, 26, 30, 33, 39, 40, 47, 50, 52, 53, 55, 64, 66], "input": [7, 33, 49, 52, 53, 55, 57, 58, 59, 61, 62, 64], "sampl": [7, 19, 24, 26, 30, 33, 50, 56], "node": [7, 10, 15, 19, 20, 23, 24, 26, 30, 33, 36, 37, 40, 49, 50, 59, 64, 66], "type": [7, 13, 19, 22, 23, 24, 25, 26, 27, 30, 33, 36, 40, 58, 60, 62, 64, 66], "deriv": 7, "first": [7, 64, 66], "": [7, 26, 52, 53, 55, 64], "method": [7, 47, 52, 53, 55, 64], "output": [7, 30, 49, 51, 52, 53, 55, 57, 58, 59, 62], "number": [7, 26, 30, 33, 50, 58, 61, 62, 64], "relat": [7, 10, 26, 30, 41, 43, 64], "head": [7, 52, 53, 55, 59], "option": [7, 17, 18, 26, 30, 33, 50, 52, 53, 55, 59, 61, 65], "multi": [7, 51, 59, 64], "attent": [7, 9, 52, 53, 55, 59], "default": [7, 17, 18, 26, 30, 33, 50, 52, 53, 55, 59, 61, 64, 66], "float": [7, 22, 27, 37, 59, 61], "rate": [7, 41, 61], "If": [7, 17, 18, 52, 53, 55, 64, 66], "us": [7, 24, 39, 41, 46, 47, 50, 51, 52, 53, 55, 56, 59, 64, 65, 66], "norm": 7, "addit": [7, 51, 64], "argument": [7, 52, 55], "torch_geometr": [7, 65], "nn": 7, "messagepass": 7, "node_inp": 7, "node_typ": [7, 50, 54, 60], "edge_typ": [7, 50, 54, 60], "edge_tim": [7, 50, 54, 60], "messag": [7, 58], "edge_index_i": 7, "node_inp_i": 7, "node_inp_j": 7, "node_type_i": 7, "node_type_j": 7, "construct": [7, 13, 14, 15, 26, 30, 33], "j": 7, "i": [7, 10, 13, 14, 24, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 55, 63, 64], "analogi": 7, "phi_": 7, "mathbf": 7, "theta": 7, "edg": [7, 13, 24, 30, 37, 50, 64], "can": [7, 51, 52, 53, 55, 64, 66], "ani": [7, 51], "which": [7, 13, 14, 15, 27, 43, 51, 52, 55, 64], "wa": 7, "initi": [7, 52, 55, 64], "propag": 7, "furthermor": 7, "tensor": [7, 22, 51, 52, 53, 55], "map": [7, 24, 37], "respect": [7, 37], "append": [7, 64], "_i": 7, "_j": 7, "variabl": 7, "name": [7, 11, 17, 37, 64], "e": [7, 51, 52, 55, 64], "g": [7, 48, 51, 52, 55, 58, 64], "x_i": 7, "x_j": 7, "updat": [7, 52, 53, 55], "aggr_out": 7, "embed": [7, 20, 24, 40, 41, 50, 52, 53, 55, 64], "gamma_": 7, "mathcal": 7, "v": 7, "aggreg": [7, 40, 41, 62, 64], "num_head": [8, 9, 52, 53, 55], "get_attent": [8, 62], "fast": 9, "query_input": 9, "source_input": 9, "output_attn": 9, "base": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 63, 64], "object": [10, 12, 13, 14, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "A": [10, 25, 27, 40, 41, 51, 52, 55, 64], "describ": [10, 40], "homogen": 10, "inform": [10, 40, 41, 43, 45, 46, 52, 53, 55, 64], "includ": [10, 22, 39, 41, 42, 45, 46, 47, 51, 52, 55, 64, 66], "node_featur": [10, 50, 54, 60, 64], "datafram": [10, 64], "contain": [10, 36, 40, 43, 52, 55, 61, 64], "featur": [10, 19, 37, 39, 47, 58, 62, 64], "link": [10, 15, 30, 39, 43, 47, 57, 59, 60, 66], "edge_list": [10, 64], "index": [10, 19, 20, 23, 26, 33, 51], "adjac": [10, 33], "matrix": [10, 33, 52, 53, 55], "time": [10, 33, 64], "target_typ": [10, 26, 33, 50, 60, 64], "source_typ": [10, 64], "relation_typ": [10, 64], "target_id": 10, "source_id": 10, "get_idx_split": 11, "split_typ": 11, "random": 11, "train_prop": 11, "valid_prop": 11, "25": 11, "label_num_per_class": 11, "20": [11, 40], "proport": [11, 22], "dataset": [11, 22, 24, 66], "split": [11, 22], "between": [11, 59, 64], "valid": [11, 22], "arg": [12, 48, 52, 55, 56], "print": [12, 17, 18, 64], "argment": 12, "data_dir": [13, 14, 15, 26, 30], "src_dst2edge_typ": 13, "dgl": [13, 14, 64, 65], "heterograph": [13, 14], "str": [13, 14, 15, 16, 17, 18, 26, 28, 29, 30, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 55], "directori": [13, 14, 15, 26, 30], "save": [13, 14, 15, 24, 30, 34, 35, 52, 55, 64], "bin": [13, 24, 26], "target": [13, 14, 15, 19, 23, 26, 33, 50, 64], "dict": [13, 19, 33, 50, 51], "correspond": 13, "src": [13, 57], "dst": [13, 57], "graph_node_nam": [14, 26], "pkl": [14, 26], "dat": [15, 30], "ar": [15, 23, 33, 36, 37, 39, 40, 47, 52, 53, 55, 64, 66], "id": [16, 52, 53, 55, 64], "folder": [16, 17, 18, 64, 66], "filenam": [16, 17], "log": [16, 17, 18], "download": [16, 17, 40, 66], "content": [16, 17, 34, 35, 41], "googl": 16, "drive": 16, "specif": [16, 17, 18, 39, 47, 51, 64], "url": 17, "none": [17, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 55, 61, 64], "an": [17, 52, 53, 55, 60, 61, 63, 64, 66], "anyth": [17, 18], "consol": [17, 18], "file": [17, 28, 29, 31, 34, 35, 64, 66], "path": [18, 28, 29, 30, 31, 34, 35, 64], "extract": [18, 19, 64], "zip": 18, "archiv": 18, "tar": 18, "layer_data": [19, 33], "gpt": [19, 33, 50, 51], "gnn": [19, 33, 50, 60, 64], "gener": [19, 20, 24, 33, 50, 52, 55, 64, 66], "pre": [19, 33, 50, 52, 53, 55, 60], "neural": [19, 33, 37, 39, 40, 41, 47, 50, 58, 60, 64], "network": [19, 33, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 50, 58, 60, 64], "relev": [19, 25, 27, 66], "all_nam": 20, "token": [20, 51, 52, 53, 55, 56, 61], "model": [20, 24, 63, 64, 66], "indx": 20, "devic": [20, 50, 52, 55, 56, 60], "languag": [20, 52, 55, 56], "word": [20, 37, 39, 40, 47], "list": [20, 23, 25, 26, 27, 30, 33, 34, 35, 50, 52, 53, 55, 64], "lm": 20, "posit": [20, 52, 53, 55], "num_nod": 21, "train_indic": 21, "val_indic": 21, "test_indic": 21, "train_ratio": [22, 37], "val_ratio": [22, 37], "test": [22, 38], "set": [22, 52, 53, 55, 66], "return": [22, 23, 25, 27, 51, 52, 53, 55, 64], "tupl": [22, 52, 53, 55], "statist": 23, "analyz": 23, "type_degin_id": 23, "graph_node_typ": 23, "type_begin_id": 23, "begin": 23, "consist": [23, 36, 52, 53, 55, 64], "main": [24, 64], "execut": 24, "process": [24, 52, 53, 55, 64, 66], "step": [24, 51, 52, 53, 55, 64], "three": [24, 36], "assign": [24, 64], "label": [24, 36, 52, 55, 64], "l2": 24, "level": 24, "field": [24, 39, 44, 47], "connect": [24, 33, 64], "bert": 24, "3": [24, 36, 39, 64, 65], "prepar": [24, 51, 52, 55], "subgraph": [24, 44], "creat": [24, 64, 65], "convers": 24, "requir": [24, 51, 52, 55, 64], "format": [24, 52, 53, 55], "follow": [24, 64, 65, 66], "structur": [24, 41, 55, 64], "labeled_field_hg": 24, "label_to_field": 24, "json": 24, "meta_hgt": 24, "meta_dict": 24, "oag": [24, 44], "stage2_data": 24, "r": [25, 27], "mean": [25, 51], "reciproc": 25, "rank": [25, 27], "mrr": [25, 66], "score": [25, 27, 52, 55], "arrai": 25, "where": [25, 39, 47, 66], "repres": [25, 27, 37, 39, 47, 64], "indic": [25, 39, 47, 52, 53, 55], "item": [25, 27], "valu": [25, 27, 52, 53, 55], "queri": 25, "metapath": [26, 40, 41, 64], "mid_typ": 26, "labeled_node_idx": 26, "k": [26, 27], "corpu": 26, "load": [26, 28, 29, 30, 32, 64], "midtyp": 26, "retain": 26, "normal": [27, 51], "discount": 27, "cumul": 27, "gain": 27, "ndcg": [27, 66], "file_path": [28, 29, 34, 35, 64], "open": [28, 29, 44, 46, 63, 64], "pickl": [28, 34], "txt": [29, 30, 35], "alpha": 30, "05": 30, "path_length": 30, "1000000": 30, "path_num": 30, "450000": 30, "also": [30, 51, 52, 53, 55, 64], "rw_train_corpu": 30, "rw_valid_corpu": 30, "termin": 30, "probabl": 30, "length": [30, 52, 53, 55], "read": [31, 52, 53, 55], "npz": 31, "file_obj": 32, "time_rang": 33, "sampled_depth": 33, "sampled_numb": 33, "8": [33, 62, 65], "inp": [33, 61], "sub": 33, "other": [33, 43, 64], "current": 33, "budget": 33, "maintain": [33, 64], "node_id": 33, "store": [33, 64], "after": [33, 50, 52, 55, 64], "rang": [33, 52, 53, 55], "depth": 33, "samp_target_nod": 33, "root": [36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "callabl": [36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "pre_transform": [36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "pre_filt": 36, "force_reload": [36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "metapath2vec": 36, "scalabl": 36, "represent": [36, 40, 52, 53, 55], "learn": [36, 47, 64], "author": [36, 40, 43, 44, 64], "venu": 36, "entiti": [36, 40, 41, 64], "693": 36, "531": 36, "883": 36, "194": 36, "405": 36, "categori": [36, 37], "research": [36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 64], "interest": 36, "avail": [36, 64], "ground": 36, "truth": 36, "subset": [36, 40, 41, 64], "15": 37, "photo": 37, "pitfal": 37, "evalu": [37, 66], "good": 37, "two": [37, 52, 53, 55, 64, 66], "frequent": 37, "bought": 37, "togeth": 37, "given": [37, 52, 53, 55], "product": [37, 64], "review": [37, 41, 45, 46], "bag": [37, 40], "task": [37, 49, 57, 64, 66], "alia": [38, 55], "home": [38, 41], "yjy": 38, "heteroprompt": 38, "py": [38, 64, 66], "wide": [39, 41, 46, 47], "benchmark": [39, 47, 64], "compris": [39, 47, 52, 55], "312": 39, "scientif": [39, 47], "public": [39, 43, 47, 64], "scienc": [39, 40, 44, 64], "These": [39, 47, 64], "categor": [39, 47], "six": 39, "agent": 39, "ai": [39, 65], "db": 39, "ir": 39, "ml": 39, "hci": 39, "citat": [39, 43, 44, 47, 64], "4": [39, 40, 64, 65], "732": 39, "703": 39, "dimension": [39, 47], "binari": [39, 47], "vector": [39, 47, 52, 53, 55, 64], "presenc": [39, 47], "absenc": [39, 47], "document": [39, 47, 52, 55], "bibliographi": [40, 64], "websit": [40, 64], "collect": [40, 41, 42, 43, 45, 46, 64], "magnn": [40, 41, 64], "four": 40, "057": 40, "14": 40, "328": 40, "term": [40, 64], "7": 40, "723": 40, "confer": [40, 43, 64], "divid": 40, "area": [40, 42, 44, 46], "databas": [40, 41], "data": [40, 41, 46, 51, 52, 53, 55, 64, 65], "mine": [40, 45], "artifici": 40, "intellig": 40, "retriev": [40, 45], "keyword": [40, 64], "see": [40, 52, 53, 55], "nginx": 40, "show": 40, "comprehens": [41, 42, 43, 45, 46], "movi": 41, "detail": [41, 42, 52, 53, 55, 64], "about": [41, 46, 64], "tv": 41, "seri": 41, "podcast": 41, "video": [41, 64], "game": 41, "stream": 41, "It": [41, 42, 43, 44, 45, 52, 53, 55, 63], "encompass": [41, 43], "cast": 41, "crew": 41, "plot": 41, "summari": 41, "trivia": 41, "user": [41, 42, 46, 52, 53, 55, 64, 66], "critic": 41, "applic": [41, 45, 64], "recommend": [41, 42, 46, 65], "system": [41, 42, 46], "sentiment": [41, 46], "analysi": [41, 42, 43, 44, 46], "media": 41, "analyt": 41, "http": [41, 43, 52, 53, 55, 65], "arxiv": [41, 52, 53, 55], "org": [41, 52, 53, 55], "ab": [41, 52, 53, 55], "2002": 41, "01680": 41, "_": [41, 64], "focus": [41, 44], "involv": [41, 64], "variou": [41, 43, 45, 52, 55, 64], "actor": 41, "director": 41, "genr": 41, "more": [41, 52, 53, 55], "facilit": [41, 44], "multimedia": 41, "last": [42, 52, 53, 55], "fm": 42, "listen": 42, "histori": 42, "music": 42, "platform": [42, 46], "record": 42, "interact": [42, 46], "artist": 42, "track": 42, "make": 42, "valuabl": [42, 43, 45], "behavior": [42, 52, 53, 55], "social": [42, 46], "domain": [42, 43, 44], "microsoft": 43, "academ": [43, 44], "vast": 43, "journal": 43, "relationship": [43, 64], "serv": [43, 45], "resourc": [43, 45], "bibliometr": 43, "ogb": 43, "stanford": 43, "edu": 43, "doc": [43, 52, 53, 55], "lsc": 43, "mag240m": 43, "provid": [43, 52, 53, 55, 64], "version": [43, 64, 65], "over": [43, 52, 53, 55], "240": 43, "million": 43, "across": 43, "c": 44, "design": [44, 64], "collabor": [44, 64], "trend": 44, "biomed": 45, "literatur": 45, "articl": 45, "clinic": 45, "studi": 45, "text": [45, 48, 50, 60], "busi": 46, "708": 47, "machin": [47, 64], "seven": 47, "case": [47, 51, 52, 55], "genet": 47, "algorithm": 47, "probabilist": 47, "reinforc": 47, "rule": 47, "theori": 47, "429": 47, "433": 47, "build_attention_mask": 48, "encode_imag": 48, "idx_train": 48, "encode_text": 48, "s_n": 48, "t_n": 48, "s_n_text": 48, "t_n_text": 48, "initialize_paramet": 48, "n_hid": [49, 54, 57, 59], "n_out": [49, 57, 59], "classif": [49, 64, 66], "rem_edge_list": [50, 60], "attr_decod": [50, 60], "neg_samp_num": [50, 60], "neg_queue_s": [50, 60], "remain": 50, "attribut": [50, 60, 64], "decod": [50, 51, 52, 53, 55, 60, 61], "maximum": 50, "neg": 50, "max": 50, "neget": 50, "adapt": 50, "queue": 50, "feat_loss": [50, 60], "rep": [50, 60], "out": [50, 51, 60], "link_loss": [50, 60], "node_emb": [50, 60], "ori_edge_list": [50, 60], "node_dict": [50, 60], "use_queu": [50, 60], "update_queu": [50, 60], "neg_sampl": [50, 60], "souce_node_list": [50, 60], "pos_node_list": [50, 60], "text_loss": [50, 60], "w2v_model": [50, 60], "training_arg": 51, "model_arg": 51, "data_arg": 51, "configure_optim": 51, "optim": 51, "schedul": 51, "linear": 51, "warmup": 51, "decai": 51, "training_step": 51, "batch": 51, "batch_idx": 51, "here": [51, 64, 66], "you": [51, 52, 53, 55, 64], "loss": [51, 52, 55], "some": 51, "metric": [51, 64, 66], "progress": 51, "bar": 51, "logger": 51, "your": [51, 52, 53, 55, 64, 65], "iter": 51, "dataload": 51, "dataloader_idx": 51, "produc": 51, "onli": [51, 52, 53, 55, 64], "multipl": [51, 64], "dictionari": [51, 64], "kei": [51, 52, 53, 55, 64], "must": 51, "automat": 51, "In": [51, 52, 55, 64], "skip": 51, "next": [51, 52, 55, 64], "support": [51, 55, 64], "gpu": 51, "tpu": 51, "deepspe": 51, "For": [51, 64, 65], "manual": 51, "ha": [51, 52, 55], "special": [51, 52, 53, 55], "d": 51, "do": 51, "calcul": [51, 52, 55], "fancier": 51, "thing": 51, "like": [51, 52, 55, 64], "someth": 51, "exampl": [51, 52, 55, 65, 66], "def": [51, 64], "self": [51, 52, 53, 55, 64], "y": 51, "z": 51, "encod": [51, 52, 53, 55, 61], "To": 51, "switch": [51, 66], "control": [51, 52, 53, 55], "__init__": [51, 64], "super": [51, 64], "automatic_optim": 51, "gan": 51, "opt1": 51, "opt2": 51, "when": [51, 52, 53, 55, 64], "accumulate_grad_batch": 51, "intern": [51, 52, 53, 55], "config": [52, 53, 55], "llama": [52, 53], "causal": [52, 55], "input_id": [52, 53, 55], "longtensor": [52, 53, 55], "attention_mask": [52, 53, 55], "past_key_valu": [52, 53, 55], "floattensor": [52, 53, 55], "inputs_emb": [52, 53, 55], "use_cach": [52, 53, 55], "output_attent": [52, 53, 55], "output_hidden_st": [52, 53, 55], "graph_data": [52, 53, 55], "return_dict": [52, 53, 55], "llamaforcausallm": [52, 55], "overrid": [52, 53, 55], "__call__": [52, 53, 55], "tip": [52, 53, 55], "post": [52, 53, 55], "torch": [52, 53, 55, 56, 65], "shape": [52, 53, 55], "batch_siz": [52, 53, 55], "sequence_length": [52, 53, 55], "sequenc": [52, 53, 55], "vocabulari": [52, 53, 55], "pad": [52, 53, 55], "obtain": [52, 53, 55, 66], "autotoken": [52, 53, 55, 56], "pretrainedtoken": [52, 53, 55], "what": [52, 53, 55], "glossari": [52, 53, 55], "mask": [52, 53, 55], "avoid": [52, 53, 55], "select": [52, 53, 55], "have": [52, 53, 55, 64, 66], "want": [52, 53, 55, 66], "chang": [52, 53, 55], "modeling_opt": [52, 53, 55], "_prepare_decoder_attention_mask": [52, 53, 55], "modifi": [52, 53, 55, 64, 66], "diagram": [52, 53, 55], "1910": [52, 53, 55], "13461": [52, 53, 55], "strategi": [52, 53, 55], "position_id": [52, 53, 55], "n_posit": [52, 53, 55], "cach": [52, 53, 55], "hidden": [52, 53, 55, 58, 61, 62], "state": [52, 53, 55], "block": [52, 53, 55], "cross": [52, 53, 55], "speed": [52, 53, 55], "up": [52, 53, 55], "sequenti": [52, 53, 55], "typic": [52, 53, 55, 64, 66], "previou": [52, 53, 55], "stage": [52, 53, 55], "allow": [52, 53, 55], "cache_util": [52, 53, 55], "our": [52, 53, 55, 66], "kv": [52, 53, 55], "guid": [52, 53, 55, 66], "huggingfac": [52, 53, 55], "co": [52, 53, 55], "en": [52, 53, 55], "kv_cach": [52, 53, 55], "n_layer": [52, 53, 54, 55], "embed_size_per_head": [52, 53, 55], "known": [52, 53, 55], "legaci": [52, 53, 55], "same": [52, 53, 55, 64], "fed": [52, 53, 55], "those": [52, 53, 55], "don": [52, 53, 55], "t": [52, 53, 55], "past": [52, 53, 55], "hidden_s": [52, 53, 55], "choos": [52, 53, 55], "directli": [52, 53, 55, 66], "how": [52, 53, 55, 64, 66], "convert": [52, 53, 55], "associ": [52, 53, 55], "than": [52, 53, 55], "lookup": [52, 53, 55], "whether": [52, 53, 55], "layer": [52, 53, 55, 58, 61, 64], "under": [52, 53, 55, 63], "hidden_st": [52, 53, 55], "util": [52, 53, 55], "modeloutput": [52, 53, 55], "plain": [52, 53, 55], "cache_posit": [52, 53, 55], "depict": [52, 53, 55], "contrarili": [52, 53, 55], "affect": [52, 53, 55], "correct": [52, 53, 55], "infer": [52, 53, 55, 56], "complet": [52, 53, 55, 64], "either": [52, 55, 66], "vocab_s": [52, 55], "100": [52, 55], "docstr": [52, 55], "num_logits_to_keep": [52, 55], "logit": [52, 55], "memori": [52, 55], "becom": [52, 55], "pretti": [52, 55], "signific": [52, 55], "long": [52, 55], "larg": [52, 55, 56], "modeling_output": [52, 55], "causallmoutputwithpast": [52, 55], "element": [52, 55], "depend": [52, 55, 64], "configur": [52, 55], "llamaconfig": [52, 53, 55], "predict": [52, 55, 57, 59, 60, 62, 66], "befor": [52, 55], "softmax": [52, 55], "plu": [52, 55], "weight": [52, 55], "averag": [52, 55], "python": [52, 55, 66], "import": [52, 55, 64], "from_pretrain": [52, 55], "hei": [52, 55], "prompt": [52, 55], "me": [52, 55], "consciou": [52, 55], "talk": [52, 55], "generate_id": [52, 55], "batch_decod": [52, 55], "ni": [52, 55], "m": [52, 55], "get_graph_tow": [52, 53, 55], "get_model": [52, 55], "get_vision_tow": 52, "initialize_graph_token": [52, 55], "use_graph_start_end": [52, 55], "tune_graph_mlp_adapt": [52, 55], "pretrain_graph_mlp_adapt": [52, 53, 55], "prepare_inputs_for_gener": [52, 55], "4d": [52, 55], "slice": [52, 55], "exist": [52, 55, 64], "expect": [52, 55], "differ": [52, 55, 64], "might": [52, 55], "work": [52, 55, 64, 65], "most": [52, 55, 64, 66], "llm": [52, 55], "llamamodel": 53, "initialize_graph_modul": 53, "graph_tow": 53, "graph_select_lay": 53, "fsdp": 53, "prev_norm": 54, "last_norm": 54, "heterollama": 55, "extend": 55, "condit": 55, "heterollamaconfig": 55, "config_class": 55, "hetero_key_ord": 55, "get": 55, "compon": 55, "underli": [55, 64], "heterollamamodel": 55, "assist": 56, "properti": [56, 62], "encode_graph": 56, "maybe_autocast": 56, "dtype": 56, "bfloat16": 56, "print_trainable_param": 56, "param": [58, 62], "use_conv": 58, "temperatur": 59, "match": 59, "pair": [59, 64], "conduct": 59, "ty": 59, "pt": 60, "hgnn": 60, "compos": 60, "relation_level": 60, "neg_sample_ori": 60, "structure_loss": 60, "n_word": 61, "ninp": 61, "nhid": 61, "nlayer": 61, "recurr": 61, "lstm": 61, "from_w2v": 61, "w2v": 61, "trans_num_lay": 62, "trans_num_head": 62, "trans_dropout": 62, "trans_use_bn": 62, "trans_use_residu": 62, "trans_use_weight": 62, "trans_use_act": 62, "gnn_num_lay": 62, "gnn_dropout": 62, "gnn_use_weight": 62, "gnn_use_init": 62, "gnn_use_bn": 62, "gnn_use_residu": 62, "gnn_use_act": 62, "use_graph": 62, "graph_weight": 62, "add": [62, 64], "spatial": 62, "molecular": 62, "pipelin": 63, "foundat": [63, 64], "pytorch": [63, 65], "we": [63, 64, 65, 66], "integr": 63, "sota": 63, "develop": [63, 66], "join": 63, "u": 63, "overview": 64, "dblp": 64, "outlin": 64, "along": 64, "write": 64, "publish": 64, "etc": 64, "goal": 64, "suitabl": 64, "custom": [64, 66], "preprocess": 64, "shown": 64, "accommod": 64, "compani": 64, "countri": 64, "purchas": 64, "watch": 64, "build": 64, "csv": 64, "mai": 64, "column": 64, "author_id": 64, "author_nam": 64, "author_label": 64, "load_data": 64, "uniqu": 64, "identifi": 64, "titl": 64, "add_nod": 64, "ad": 64, "ensur": 64, "correctli": 64, "common": 64, "thei": [64, 66], "written": 64, "were": 64, "separ": 64, "add_edg": 64, "establish": 64, "both": 64, "direct": 64, "undirect": 64, "handl": 64, "help": 64, "improv": 64, "topic": 64, "count": 64, "year": 64, "add_node_featur": 64, "scalar": 64, "definit": 64, "role": 64, "abov": 64, "plai": 64, "central": 64, "respons": 64, "manag": [64, 65], "entir": 64, "its": 64, "By": 64, "easili": 64, "manipul": 64, "without": 64, "worri": 64, "implement": [64, 66], "below": 64, "dynam": 64, "dill": 64, "panda": 64, "pd": 64, "defaultdict": 64, "node_forward": 64, "lambda": 64, "node_bacward": 64, "nest": 64, "nfl": 64, "ser": 64, "len": 64, "source_nod": 64, "target_nod": 64, "rev_": 64, "els": 64, "get_meta_graph": 64, "meta": 64, "r_type": 64, "get_typ": 64, "df": 64, "read_csv": 64, "header": 64, "sep": 64, "dropna": 64, "convert_defaultdict_to_dict": 64, "k1": 64, "k2": 64, "k3": 64, "e1": 64, "continu": 64, "e2": 64, "load_dataa": 64, "build_graph": 64, "author_data": 64, "conf_data": 64, "paper_data": 64, "term_data": 64, "row": 64, "iterrow": 64, "conf": 64, "author_write_edg": 64, "conf_receive_edg": 64, "paper_was_published_in_term_edg": 64, "paper_was_received_by_conf_edg": 64, "paper_was_written_by_author_edg": 64, "term_publish_paper_edg": 64, "src_id": 64, "dst_id": 64, "save_path": 64, "pk": 64, "wb": 64, "f": [64, 65], "dump": 64, "section": [64, 66], "pretrain": [64, 66], "fine": [64, 66], "tune": [64, 66], "script": 64, "paradigm": [64, 66], "therefor": 64, "doe": 64, "walklm": [64, 66], "nc_ft": [64, 66], "lp_ft": [64, 66], "pleas": 64, "note": 64, "strict": 64, "limit": 64, "howev": 64, "fair": 64, "baselin": 64, "comparison": 64, "restrict": 64, "conv": 64, "dure": [64, 66], "highli": 64, "instruct": 64, "well": 64, "convolut": 64, "encourag": 64, "abstract": 64, "ggfm": [64, 65], "guidelin": 64, "pyg": [64, 65], "adher": 64, "convent": 64, "linux": 65, "conda": 65, "packag": 65, "n": 65, "activ": 65, "tutori": 65, "proper": 65, "command": 65, "accord": 65, "o": 65, "cuda": 65, "pip": 65, "torchvis": 65, "torchaudio": 65, "wheel": 65, "repo": 65, "html": 65, "pypi": 65, "git": 65, "clone": 65, "github": 65, "com": 65, "bupt": 65, "gamma": 65, "cd": [65, 66], "locat": 66, "gfm": 66, "so": 66, "_ft": 66, "necessari": 66, "altern": 66, "downstream": 66, "onc": 66, "proce": 66, "wish": 66, "simpli": 66, "refer": 66, "new": 66, "final": 66, "result": 66, "accuraci": 66}, "objects": {"ggfm.conv": [[5, 0, 1, "", "GraphConv"], [6, 0, 1, "", "GraphConvLayer"], [7, 0, 1, "", "HGTConv"], [8, 0, 1, "", "TransConv"], [9, 0, 1, "", "TransConvLayer"]], "ggfm.conv.GraphConv": [[5, 1, 1, "", "forward"], [5, 1, 1, "", "reset_parameters"], [5, 2, 1, "", "training"]], "ggfm.conv.GraphConvLayer": [[6, 1, 1, "", "forward"], [6, 1, 1, "", "reset_parameters"], [6, 2, 1, "", "training"]], "ggfm.conv.HGTConv": [[7, 1, 1, "", "forward"], [7, 1, 1, "", "message"], [7, 1, 1, "", "update"]], "ggfm.conv.TransConv": [[8, 1, 1, "", "forward"], [8, 1, 1, "", "get_attentions"], [8, 1, 1, "", "reset_parameters"], [8, 2, 1, "", "training"]], "ggfm.conv.TransConvLayer": [[9, 1, 1, "", "forward"], [9, 1, 1, "", "reset_parameters"], [9, 2, 1, "", "training"]], "ggfm.data": [[10, 0, 1, "", "Graph"], [11, 0, 1, "", "HomogeneousGraph"], [12, 0, 1, "", "args_print"], [13, 0, 1, "", "construct_graph"], [14, 0, 1, "", "construct_graph_node_name"], [15, 0, 1, "", "construct_link_and_node"], [16, 0, 1, "", "download_google_url"], [17, 0, 1, "", "download_url"], [18, 0, 1, "", "extract_zip"], [19, 0, 1, "", "feature_extractor"], [20, 0, 1, "", "generate_lm_embs"], [21, 0, 1, "", "generate_masks"], [22, 0, 1, "", "get_train_val_test_split"], [23, 0, 1, "", "get_type_id"], [24, 0, 1, "", "higpt_prompt_generation"], [25, 0, 1, "", "mean_reciprocal_rank"], [26, 0, 1, "", "metapath_based_corpus_construction"], [27, 0, 1, "", "ndcg_at_k"], [28, 0, 1, "", "open_pkl_file"], [29, 0, 1, "", "open_txt_file"], [30, 0, 1, "", "random_walk_based_corpus_construction"], [31, 0, 1, "", "read_npz"], [32, 0, 1, "", "renamed_load"], [33, 0, 1, "", "sample_subgraph"], [34, 0, 1, "", "save_pkl_file"], [35, 0, 1, "", "save_txt_file"]], "ggfm.data.HomogeneousGraph": [[11, 1, 1, "", "get_idx_split"]], "ggfm.datasets": [[36, 0, 1, "", "AMiner"], [37, 0, 1, "", "Amazon"], [38, 2, 1, "", "Aminer"], [39, 0, 1, "", "CiteSeer"], [40, 0, 1, "", "DBLP"], [41, 0, 1, "", "IMDB"], [42, 0, 1, "", "LastFM"], [43, 0, 1, "", "MAG"], [44, 0, 1, "", "OAG_CS"], [45, 0, 1, "", "PubMed"], [46, 0, 1, "", "YELP"], [47, 0, 1, "", "cora"]], "ggfm.models": [[48, 0, 1, "", "CLIP"], [49, 0, 1, "", "Classifier"], [50, 0, 1, "", "GPT_GNN"], [51, 0, 1, "", "GraphGPT_pl"], [52, 0, 1, "", "GraphLlamaForCausalLM"], [53, 0, 1, "", "GraphLlamaModel"], [54, 0, 1, "", "HGT"], [55, 0, 1, "", "HeteroLlamaForCausalLM"], [56, 0, 1, "", "LLAGA"], [57, 0, 1, "", "LinkPredictor"], [58, 0, 1, "", "MPNN"], [59, 0, 1, "", "Matcher"], [60, 0, 1, "", "PT_HGNN"], [61, 0, 1, "", "RNNModel"], [62, 0, 1, "", "SGFormer"]], "ggfm.models.CLIP": [[48, 1, 1, "", "build_attention_mask"], [48, 1, 1, "", "encode_image"], [48, 1, 1, "", "encode_text"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "initialize_parameters"], [48, 2, 1, "", "training"]], "ggfm.models.Classifier": [[49, 1, 1, "", "forward"], [49, 2, 1, "", "training"]], "ggfm.models.GPT_GNN": [[50, 1, 1, "", "feat_loss"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "link_loss"], [50, 1, 1, "", "neg_sample"], [50, 1, 1, "", "text_loss"], [50, 2, 1, "", "training"]], "ggfm.models.GraphGPT_pl": [[51, 1, 1, "", "configure_optimizers"], [51, 1, 1, "", "training_step"]], "ggfm.models.GraphLlamaForCausalLM": [[52, 1, 1, "", "forward"], [52, 1, 1, "", "get_graph_tower"], [52, 1, 1, "", "get_model"], [52, 1, 1, "", "get_vision_tower"], [52, 1, 1, "", "initialize_graph_tokenizer"], [52, 1, 1, "", "prepare_inputs_for_generation"], [52, 2, 1, "", "training"]], "ggfm.models.GraphLlamaModel": [[53, 1, 1, "", "forward"], [53, 1, 1, "", "get_graph_tower"], [53, 1, 1, "", "initialize_graph_modules"], [53, 2, 1, "", "training"]], "ggfm.models.HGT": [[54, 1, 1, "", "forward"], [54, 2, 1, "", "training"]], "ggfm.models.HeteroLlamaForCausalLM": [[55, 2, 1, "", "config_class"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_graph_tower"], [55, 1, 1, "", "get_model"], [55, 1, 1, "", "initialize_graph_tokenizer"], [55, 1, 1, "", "prepare_inputs_for_generation"], [55, 2, 1, "", "training"]], "ggfm.models.LLAGA": [[56, 3, 1, "", "device"], [56, 1, 1, "", "encode_graphs"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "inference"], [56, 1, 1, "", "maybe_autocast"], [56, 1, 1, "", "print_trainable_params"], [56, 2, 1, "", "training"]], "ggfm.models.LinkPredictor": [[57, 1, 1, "", "forward"], [57, 2, 1, "", "training"]], "ggfm.models.MPNN": [[58, 1, 1, "", "forward"], [58, 1, 1, "", "reset_parameters"], [58, 2, 1, "", "training"]], "ggfm.models.Matcher": [[59, 1, 1, "", "forward"], [59, 2, 1, "", "training"]], "ggfm.models.PT_HGNN": [[60, 1, 1, "", "feat_loss"], [60, 1, 1, "", "forward"], [60, 1, 1, "", "link_loss"], [60, 1, 1, "", "neg_sample"], [60, 1, 1, "", "neg_sample_ori"], [60, 1, 1, "", "structure_loss"], [60, 1, 1, "", "text_loss"], [60, 2, 1, "", "training"]], "ggfm.models.RNNModel": [[61, 1, 1, "", "forward"], [61, 1, 1, "", "from_w2v"], [61, 2, 1, "", "training"]], "ggfm.models.SGFormer": [[62, 1, 1, "", "forward"], [62, 1, 1, "", "get_attentions"], [62, 1, 1, "", "reset_parameters"], [62, 2, 1, "", "training"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"]}, "titleterms": {"ggfm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "conv": [0, 5, 6, 7, 8, 9], "data": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "content": 1, "graph": [1, 10], "preprocess": 1, "dataset": [2, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 64], "evalu": [3, 64], "model": [4, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "graphconv": 5, "graphconvlay": 6, "hgtconv": 7, "transconv": 8, "transconvlay": 9, "homogeneousgraph": 11, "args_print": 12, "construct_graph": 13, "construct_graph_node_nam": 14, "construct_link_and_nod": 15, "download_google_url": 16, "download_url": 17, "extract_zip": 18, "feature_extractor": 19, "generate_lm_emb": 20, "generate_mask": 21, "get_train_val_test_split": 22, "get_type_id": 23, "higpt_prompt_gener": 24, "mean_reciprocal_rank": 25, "metapath_based_corpus_construct": 26, "ndcg_at_k": 27, "open_pkl_fil": 28, "open_txt_fil": 29, "random_walk_based_corpus_construct": 30, "read_npz": 31, "renamed_load": 32, "sample_subgraph": 33, "save_pkl_fil": 34, "save_txt_fil": 35, "amin": [36, 38], "amazon": 37, "cites": 39, "dblp": 40, "imdb": 41, "lastfm": 42, "mag": 43, "oag_c": 44, "pubm": 45, "yelp": 46, "cora": 47, "clip": 48, "classifi": 49, "gpt_gnn": 50, "graphgpt_pl": 51, "graphllamaforcausallm": 52, "graphllamamodel": 53, "hgt": 54, "heterollamaforcausallm": 55, "llaga": 56, "linkpredictor": 57, "mpnn": 58, "matcher": 59, "pt_hgnn": 60, "rnnmodel": 61, "sgformer": 62, "welcom": 63, "": 63, "document": 63, "develop": 64, "guid": 64, "new": 64, "appli": 64, "exampl": 64, "instal": 65, "system": 65, "requr": 65, "python": 65, "environ": 65, "requir": 65, "quick": 66, "start": 66, "run": 66, "experi": 66}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"ggfm.conv": [[0, "ggfm-conv"]], "ggfm.data": [[1, "ggfm-data"]], "Contents": [[1, "contents"]], "Graph": [[1, "graph"]], "Graph Preprocessing": [[1, "graph-preprocessing"]], "ggfm.datasets": [[2, "ggfm-datasets"]], "ggfm.evaluation": [[3, "ggfm-evaluation"]], "ggfm.models": [[4, "ggfm-models"]], "ggfm.conv.GraphConv": [[5, "ggfm-conv-graphconv"]], "ggfm.conv.GraphConvLayer": [[6, "ggfm-conv-graphconvlayer"]], "ggfm.conv.HGTConv": [[7, "ggfm-conv-hgtconv"]], "ggfm.conv.TransConv": [[8, "ggfm-conv-transconv"]], "ggfm.conv.TransConvLayer": [[9, "ggfm-conv-transconvlayer"]], "ggfm.data.Graph": [[10, "ggfm-data-graph"]], "ggfm.data.HomogeneousGraph": [[11, "ggfm-data-homogeneousgraph"]], "ggfm.data.args_print": [[12, "ggfm-data-args-print"]], "ggfm.data.construct_graph": [[13, "ggfm-data-construct-graph"]], "ggfm.data.construct_graph_node_name": [[14, "ggfm-data-construct-graph-node-name"]], "ggfm.data.construct_link_and_node": [[15, "ggfm-data-construct-link-and-node"]], "ggfm.data.download_google_url": [[16, "ggfm-data-download-google-url"]], "ggfm.data.download_url": [[17, "ggfm-data-download-url"]], "ggfm.data.extract_zip": [[18, "ggfm-data-extract-zip"]], "ggfm.data.feature_extractor": [[19, "ggfm-data-feature-extractor"]], "ggfm.data.generate_lm_embs": [[20, "ggfm-data-generate-lm-embs"]], "ggfm.data.generate_masks": [[21, "ggfm-data-generate-masks"]], "ggfm.data.get_train_val_test_split": [[22, "ggfm-data-get-train-val-test-split"]], "ggfm.data.get_type_id": [[23, "ggfm-data-get-type-id"]], "ggfm.data.higpt_prompt_generation": [[24, "ggfm-data-higpt-prompt-generation"]], "ggfm.data.mean_reciprocal_rank": [[25, "ggfm-data-mean-reciprocal-rank"]], "ggfm.data.metapath_based_corpus_construction": [[26, "ggfm-data-metapath-based-corpus-construction"]], "ggfm.data.ndcg_at_k": [[27, "ggfm-data-ndcg-at-k"]], "ggfm.data.open_pkl_file": [[28, "ggfm-data-open-pkl-file"]], "ggfm.data.open_txt_file": [[29, "ggfm-data-open-txt-file"]], "ggfm.data.random_walk_based_corpus_construction": [[30, "ggfm-data-random-walk-based-corpus-construction"]], "ggfm.data.read_npz": [[31, "ggfm-data-read-npz"]], "ggfm.data.renamed_load": [[32, "ggfm-data-renamed-load"]], "ggfm.data.sample_subgraph": [[33, "ggfm-data-sample-subgraph"]], "ggfm.data.save_pkl_file": [[34, "ggfm-data-save-pkl-file"]], "ggfm.data.save_txt_file": [[35, "ggfm-data-save-txt-file"]], "ggfm.datasets.AMiner": [[36, "ggfm-datasets-aminer"]], "ggfm.datasets.Amazon": [[37, "ggfm-datasets-amazon"]], "ggfm.datasets.Aminer": [[38, "ggfm-datasets-aminer"]], "ggfm.datasets.CiteSeer": [[39, "ggfm-datasets-citeseer"]], "ggfm.datasets.DBLP": [[40, "ggfm-datasets-dblp"]], "ggfm.datasets.IMDB": [[41, "ggfm-datasets-imdb"]], "ggfm.datasets.LastFM": [[42, "ggfm-datasets-lastfm"]], "ggfm.datasets.MAG": [[43, "ggfm-datasets-mag"]], "ggfm.datasets.OAG_CS": [[44, "ggfm-datasets-oag-cs"]], "ggfm.datasets.PubMed": [[45, "ggfm-datasets-pubmed"]], "ggfm.datasets.YELP": [[46, "ggfm-datasets-yelp"]], "ggfm.datasets.cora": [[47, "ggfm-datasets-cora"]], "ggfm.models.CLIP": [[48, "ggfm-models-clip"]], "ggfm.models.Classifier": [[49, "ggfm-models-classifier"]], "ggfm.models.GPT_GNN": [[50, "ggfm-models-gpt-gnn"]], "ggfm.models.GraphGPT_pl": [[51, "ggfm-models-graphgpt-pl"]], "ggfm.models.GraphLlamaForCausalLM": [[52, "ggfm-models-graphllamaforcausallm"]], "ggfm.models.GraphLlamaModel": [[53, "ggfm-models-graphllamamodel"]], "ggfm.models.HGT": [[54, "ggfm-models-hgt"]], "ggfm.models.HeteroLlamaForCausalLM": [[55, "ggfm-models-heterollamaforcausallm"]], "ggfm.models.LLAGA": [[56, "ggfm-models-llaga"]], "ggfm.models.LinkPredictor": [[57, "ggfm-models-linkpredictor"]], "ggfm.models.MPNN": [[58, "ggfm-models-mpnn"]], "ggfm.models.Matcher": [[59, "ggfm-models-matcher"]], "ggfm.models.PT_HGNN": [[60, "ggfm-models-pt-hgnn"]], "ggfm.models.RNNModel": [[61, "ggfm-models-rnnmodel"]], "ggfm.models.SGFormer": [[62, "ggfm-models-sgformer"]], "Welcome to GGFM\u2019s documentation!": [[63, "welcome-to-ggfm-s-documentation"]], "Developer Guide": [[64, "developer-guide"]], "Evaluate a new dataset": [[64, "evaluate-a-new-dataset"]], "Apply a new example": [[64, "apply-a-new-example"]], "Install": [[65, "install"]], "System requrements": [[65, "system-requrements"]], "Python environment requirments": [[65, "python-environment-requirments"]], "Quick Start": [[66, "quick-start"]], "Run experiments": [[66, "run-experiments"]]}, "indexentries": {"graphconv (class in ggfm.conv)": [[5, "ggfm.conv.GraphConv"]], "forward() (ggfm.conv.graphconv method)": [[5, "ggfm.conv.GraphConv.forward"]], "reset_parameters() (ggfm.conv.graphconv method)": [[5, "ggfm.conv.GraphConv.reset_parameters"]], "training (ggfm.conv.graphconv attribute)": [[5, "ggfm.conv.GraphConv.training"]], "graphconvlayer (class in ggfm.conv)": [[6, "ggfm.conv.GraphConvLayer"]], "forward() (ggfm.conv.graphconvlayer method)": [[6, "ggfm.conv.GraphConvLayer.forward"]], "reset_parameters() (ggfm.conv.graphconvlayer method)": [[6, "ggfm.conv.GraphConvLayer.reset_parameters"]], "training (ggfm.conv.graphconvlayer attribute)": [[6, "ggfm.conv.GraphConvLayer.training"]], "hgtconv (class in ggfm.conv)": [[7, "ggfm.conv.HGTConv"]], "forward() (ggfm.conv.hgtconv method)": [[7, "ggfm.conv.HGTConv.forward"]], "message() (ggfm.conv.hgtconv method)": [[7, "ggfm.conv.HGTConv.message"]], "update() (ggfm.conv.hgtconv method)": [[7, "ggfm.conv.HGTConv.update"]], "transconv (class in ggfm.conv)": [[8, "ggfm.conv.TransConv"]], "forward() (ggfm.conv.transconv method)": [[8, "ggfm.conv.TransConv.forward"]], "get_attentions() (ggfm.conv.transconv method)": [[8, "ggfm.conv.TransConv.get_attentions"]], "reset_parameters() (ggfm.conv.transconv method)": [[8, "ggfm.conv.TransConv.reset_parameters"]], "training (ggfm.conv.transconv attribute)": [[8, "ggfm.conv.TransConv.training"]], "transconvlayer (class in ggfm.conv)": [[9, "ggfm.conv.TransConvLayer"]], "forward() (ggfm.conv.transconvlayer method)": [[9, "ggfm.conv.TransConvLayer.forward"]], "reset_parameters() (ggfm.conv.transconvlayer method)": [[9, "ggfm.conv.TransConvLayer.reset_parameters"]], "training (ggfm.conv.transconvlayer attribute)": [[9, "ggfm.conv.TransConvLayer.training"]], "graph (class in ggfm.data)": [[10, "ggfm.data.Graph"]], "homogeneousgraph (class in ggfm.data)": [[11, "ggfm.data.HomogeneousGraph"]], "get_idx_split() (ggfm.data.homogeneousgraph method)": [[11, "ggfm.data.HomogeneousGraph.get_idx_split"]], "args_print (class in ggfm.data)": [[12, "ggfm.data.args_print"]], "construct_graph (class in ggfm.data)": [[13, "ggfm.data.construct_graph"]], "construct_graph_node_name (class in ggfm.data)": [[14, "ggfm.data.construct_graph_node_name"]], "construct_link_and_node (class in ggfm.data)": [[15, "ggfm.data.construct_link_and_node"]], "download_google_url (class in ggfm.data)": [[16, "ggfm.data.download_google_url"]], "download_url (class in ggfm.data)": [[17, "ggfm.data.download_url"]], "extract_zip (class in ggfm.data)": [[18, "ggfm.data.extract_zip"]], "feature_extractor (class in ggfm.data)": [[19, "ggfm.data.feature_extractor"]], "generate_lm_embs (class in ggfm.data)": [[20, "ggfm.data.generate_lm_embs"]], "generate_masks (class in ggfm.data)": [[21, "ggfm.data.generate_masks"]], "get_train_val_test_split (class in ggfm.data)": [[22, "ggfm.data.get_train_val_test_split"]], "get_type_id (class in ggfm.data)": [[23, "ggfm.data.get_type_id"]], "higpt_prompt_generation (class in ggfm.data)": [[24, "ggfm.data.higpt_prompt_generation"]], "mean_reciprocal_rank (class in ggfm.data)": [[25, "ggfm.data.mean_reciprocal_rank"]], "metapath_based_corpus_construction (class in ggfm.data)": [[26, "ggfm.data.metapath_based_corpus_construction"]], "ndcg_at_k (class in ggfm.data)": [[27, "ggfm.data.ndcg_at_k"]], "open_pkl_file (class in ggfm.data)": [[28, "ggfm.data.open_pkl_file"]], "open_txt_file (class in ggfm.data)": [[29, "ggfm.data.open_txt_file"]], "random_walk_based_corpus_construction (class in ggfm.data)": [[30, "ggfm.data.random_walk_based_corpus_construction"]], "read_npz (class in ggfm.data)": [[31, "ggfm.data.read_npz"]], "renamed_load (class in ggfm.data)": [[32, "ggfm.data.renamed_load"]], "sample_subgraph (class in ggfm.data)": [[33, "ggfm.data.sample_subgraph"]], "save_pkl_file (class in ggfm.data)": [[34, "ggfm.data.save_pkl_file"]], "save_txt_file (class in ggfm.data)": [[35, "ggfm.data.save_txt_file"]], "aminer (class in ggfm.datasets)": [[36, "ggfm.datasets.AMiner"]], "amazon (class in ggfm.datasets)": [[37, "ggfm.datasets.Amazon"]], "aminer (in module ggfm.datasets)": [[38, "ggfm.datasets.Aminer"]], "citeseer (class in ggfm.datasets)": [[39, "ggfm.datasets.CiteSeer"]], "dblp (class in ggfm.datasets)": [[40, "ggfm.datasets.DBLP"]], "imdb (class in ggfm.datasets)": [[41, "ggfm.datasets.IMDB"]], "lastfm (class in ggfm.datasets)": [[42, "ggfm.datasets.LastFM"]], "mag (class in ggfm.datasets)": [[43, "ggfm.datasets.MAG"]], "oag_cs (class in ggfm.datasets)": [[44, "ggfm.datasets.OAG_CS"]], "pubmed (class in ggfm.datasets)": [[45, "ggfm.datasets.PubMed"]], "yelp (class in ggfm.datasets)": [[46, "ggfm.datasets.YELP"]], "cora (class in ggfm.datasets)": [[47, "ggfm.datasets.cora"]], "clip (class in ggfm.models)": [[48, "ggfm.models.CLIP"]], "build_attention_mask() (ggfm.models.clip method)": [[48, "ggfm.models.CLIP.build_attention_mask"]], "encode_image() (ggfm.models.clip method)": [[48, "ggfm.models.CLIP.encode_image"]], "encode_text() (ggfm.models.clip method)": [[48, "ggfm.models.CLIP.encode_text"]], "forward() (ggfm.models.clip method)": [[48, "ggfm.models.CLIP.forward"]], "initialize_parameters() (ggfm.models.clip method)": [[48, "ggfm.models.CLIP.initialize_parameters"]], "training (ggfm.models.clip attribute)": [[48, "ggfm.models.CLIP.training"]], "classifier (class in ggfm.models)": [[49, "ggfm.models.Classifier"]], "forward() (ggfm.models.classifier method)": [[49, "ggfm.models.Classifier.forward"]], "training (ggfm.models.classifier attribute)": [[49, "ggfm.models.Classifier.training"]], "gpt_gnn (class in ggfm.models)": [[50, "ggfm.models.GPT_GNN"]], "feat_loss() (ggfm.models.gpt_gnn method)": [[50, "ggfm.models.GPT_GNN.feat_loss"]], "forward() (ggfm.models.gpt_gnn method)": [[50, "ggfm.models.GPT_GNN.forward"]], "link_loss() (ggfm.models.gpt_gnn method)": [[50, "ggfm.models.GPT_GNN.link_loss"]], "neg_sample() (ggfm.models.gpt_gnn method)": [[50, "ggfm.models.GPT_GNN.neg_sample"]], "text_loss() (ggfm.models.gpt_gnn method)": [[50, "ggfm.models.GPT_GNN.text_loss"]], "training (ggfm.models.gpt_gnn attribute)": [[50, "ggfm.models.GPT_GNN.training"]], "graphgpt_pl (class in ggfm.models)": [[51, "ggfm.models.GraphGPT_pl"]], "configure_optimizers() (ggfm.models.graphgpt_pl method)": [[51, "ggfm.models.GraphGPT_pl.configure_optimizers"]], "training_step() (ggfm.models.graphgpt_pl method)": [[51, "ggfm.models.GraphGPT_pl.training_step"]], "graphllamaforcausallm (class in ggfm.models)": [[52, "ggfm.models.GraphLlamaForCausalLM"]], "forward() (ggfm.models.graphllamaforcausallm method)": [[52, "ggfm.models.GraphLlamaForCausalLM.forward"]], "get_graph_tower() (ggfm.models.graphllamaforcausallm method)": [[52, "ggfm.models.GraphLlamaForCausalLM.get_graph_tower"]], "get_model() (ggfm.models.graphllamaforcausallm method)": [[52, "ggfm.models.GraphLlamaForCausalLM.get_model"]], "get_vision_tower() (ggfm.models.graphllamaforcausallm method)": [[52, "ggfm.models.GraphLlamaForCausalLM.get_vision_tower"]], "initialize_graph_tokenizer() (ggfm.models.graphllamaforcausallm method)": [[52, "ggfm.models.GraphLlamaForCausalLM.initialize_graph_tokenizer"]], "prepare_inputs_for_generation() (ggfm.models.graphllamaforcausallm method)": [[52, "ggfm.models.GraphLlamaForCausalLM.prepare_inputs_for_generation"]], "training (ggfm.models.graphllamaforcausallm attribute)": [[52, "ggfm.models.GraphLlamaForCausalLM.training"]], "graphllamamodel (class in ggfm.models)": [[53, "ggfm.models.GraphLlamaModel"]], "forward() (ggfm.models.graphllamamodel method)": [[53, "ggfm.models.GraphLlamaModel.forward"]], "get_graph_tower() (ggfm.models.graphllamamodel method)": [[53, "ggfm.models.GraphLlamaModel.get_graph_tower"]], "initialize_graph_modules() (ggfm.models.graphllamamodel method)": [[53, "ggfm.models.GraphLlamaModel.initialize_graph_modules"]], "training (ggfm.models.graphllamamodel attribute)": [[53, "ggfm.models.GraphLlamaModel.training"]], "hgt (class in ggfm.models)": [[54, "ggfm.models.HGT"]], "forward() (ggfm.models.hgt method)": [[54, "ggfm.models.HGT.forward"]], "training (ggfm.models.hgt attribute)": [[54, "ggfm.models.HGT.training"]], "heterollamaforcausallm (class in ggfm.models)": [[55, "ggfm.models.HeteroLlamaForCausalLM"]], "config_class (ggfm.models.heterollamaforcausallm attribute)": [[55, "ggfm.models.HeteroLlamaForCausalLM.config_class"]], "forward() (ggfm.models.heterollamaforcausallm method)": [[55, "ggfm.models.HeteroLlamaForCausalLM.forward"]], "get_graph_tower() (ggfm.models.heterollamaforcausallm method)": [[55, "ggfm.models.HeteroLlamaForCausalLM.get_graph_tower"]], "get_model() (ggfm.models.heterollamaforcausallm method)": [[55, "ggfm.models.HeteroLlamaForCausalLM.get_model"]], "initialize_graph_tokenizer() (ggfm.models.heterollamaforcausallm method)": [[55, "ggfm.models.HeteroLlamaForCausalLM.initialize_graph_tokenizer"]], "prepare_inputs_for_generation() (ggfm.models.heterollamaforcausallm method)": [[55, "ggfm.models.HeteroLlamaForCausalLM.prepare_inputs_for_generation"]], "training (ggfm.models.heterollamaforcausallm attribute)": [[55, "ggfm.models.HeteroLlamaForCausalLM.training"]], "llaga (class in ggfm.models)": [[56, "ggfm.models.LLAGA"]], "device (ggfm.models.llaga property)": [[56, "ggfm.models.LLAGA.device"]], "encode_graphs() (ggfm.models.llaga method)": [[56, "ggfm.models.LLAGA.encode_graphs"]], "forward() (ggfm.models.llaga method)": [[56, "ggfm.models.LLAGA.forward"]], "inference() (ggfm.models.llaga method)": [[56, "ggfm.models.LLAGA.inference"]], "maybe_autocast() (ggfm.models.llaga method)": [[56, "ggfm.models.LLAGA.maybe_autocast"]], "print_trainable_params() (ggfm.models.llaga method)": [[56, "ggfm.models.LLAGA.print_trainable_params"]], "training (ggfm.models.llaga attribute)": [[56, "ggfm.models.LLAGA.training"]], "linkpredictor (class in ggfm.models)": [[57, "ggfm.models.LinkPredictor"]], "forward() (ggfm.models.linkpredictor method)": [[57, "ggfm.models.LinkPredictor.forward"]], "training (ggfm.models.linkpredictor attribute)": [[57, "ggfm.models.LinkPredictor.training"]], "mpnn (class in ggfm.models)": [[58, "ggfm.models.MPNN"]], "forward() (ggfm.models.mpnn method)": [[58, "ggfm.models.MPNN.forward"]], "reset_parameters() (ggfm.models.mpnn method)": [[58, "ggfm.models.MPNN.reset_parameters"]], "training (ggfm.models.mpnn attribute)": [[58, "ggfm.models.MPNN.training"]], "matcher (class in ggfm.models)": [[59, "ggfm.models.Matcher"]], "forward() (ggfm.models.matcher method)": [[59, "ggfm.models.Matcher.forward"]], "training (ggfm.models.matcher attribute)": [[59, "ggfm.models.Matcher.training"]], "pt_hgnn (class in ggfm.models)": [[60, "ggfm.models.PT_HGNN"]], "feat_loss() (ggfm.models.pt_hgnn method)": [[60, "ggfm.models.PT_HGNN.feat_loss"]], "forward() (ggfm.models.pt_hgnn method)": [[60, "ggfm.models.PT_HGNN.forward"]], "link_loss() (ggfm.models.pt_hgnn method)": [[60, "ggfm.models.PT_HGNN.link_loss"]], "neg_sample() (ggfm.models.pt_hgnn method)": [[60, "ggfm.models.PT_HGNN.neg_sample"]], "neg_sample_ori() (ggfm.models.pt_hgnn method)": [[60, "ggfm.models.PT_HGNN.neg_sample_ori"]], "structure_loss() (ggfm.models.pt_hgnn method)": [[60, "ggfm.models.PT_HGNN.structure_loss"]], "text_loss() (ggfm.models.pt_hgnn method)": [[60, "ggfm.models.PT_HGNN.text_loss"]], "training (ggfm.models.pt_hgnn attribute)": [[60, "ggfm.models.PT_HGNN.training"]], "rnnmodel (class in ggfm.models)": [[61, "ggfm.models.RNNModel"]], "forward() (ggfm.models.rnnmodel method)": [[61, "ggfm.models.RNNModel.forward"]], "from_w2v() (ggfm.models.rnnmodel method)": [[61, "ggfm.models.RNNModel.from_w2v"]], "training (ggfm.models.rnnmodel attribute)": [[61, "ggfm.models.RNNModel.training"]], "sgformer (class in ggfm.models)": [[62, "ggfm.models.SGFormer"]], "forward() (ggfm.models.sgformer method)": [[62, "ggfm.models.SGFormer.forward"]], "get_attentions() (ggfm.models.sgformer method)": [[62, "ggfm.models.SGFormer.get_attentions"]], "reset_parameters() (ggfm.models.sgformer method)": [[62, "ggfm.models.SGFormer.reset_parameters"]], "training (ggfm.models.sgformer attribute)": [[62, "ggfm.models.SGFormer.training"]]}})